name: CMake-build

on:
  push:
    branches:
      - master
      - dev

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest  # 最新版 Windows
    strategy:
      matrix:
        qt_version: [5.15.2]

    steps:
    # ----------------------
    # 1. 检出代码（包含 Submodule）
    # ----------------------
    - name: Checkout code (including submodules)
      uses: actions/checkout@v3
      with:
        submodules: recursive  # 关键修改：拉取 Submodule
        fetch-depth: 0        # 确保 Submodule 能正确获取历史版本

    # ----------------------
    # 2. 安装 Python 及依赖
    # ----------------------
    - name: Cache Python
      uses: actions/cache@v3
      with:
        path: ~\AppData\Local\Programs\Python
        key: ${{ runner.os }}-python-${{ hashFiles('requirements.txt') }}

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.7'  # 至少 Python 3.7

    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt

    # ----------------------
    # 3. 安装 zlib（以 vcpkg）
    # ----------------------
    - name: Install vcpkg
      run: |
        git clone https://github.com/Microsoft/vcpkg.git
        cd vcpkg
        .\bootstrap-vcpkg.bat

    - name: Install zlib via vcpkg
      run: |
        cd vcpkg
        .\vcpkg install zlib:x64-windows

    # ----------------------
    # 4. 安装 Qt
    # ----------------------
    - name: Cache Qt
      uses: actions/cache@v3
      with:
        path: C:\Qt
        key: ${{ runner.os }}-qt-${{ hashFiles('.github/workflow-cache-version-file.txt') }}

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
          version: ${{ matrix.qt_version }}
          dir: C:\Qt

    # ----------------------
    # 5. 编译第三方库
    # ----------------------
    - name: build 3rdparty
      working-directory: src/3rdparty
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
        cmake --build . --config Release
        cmake --install .

    # ----------------------
    # 6. 编译主项目
    # ----------------------
    - name: build the project
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
        cmake --build . --config Release